--
-- PostgreSQL database dump
--

-- Dumped from database version 14.2
-- Dumped by pg_dump version 14.2

SET statement_timeout = 0;
SET lock_timeout = 0;
SET idle_in_transaction_session_timeout = 0;
SET client_encoding = 'UTF8';
SET standard_conforming_strings = on;
SELECT pg_catalog.set_config('search_path', '', false);
SET check_function_bodies = false;
SET xmloption = content;
SET client_min_messages = warning;
SET row_security = off;

--
-- Name: mispris; Type: DATABASE; Schema: -; Owner: postgres
--

CREATE DATABASE mispris WITH TEMPLATE = template0 ENCODING = 'UTF8' LOCALE = 'Russian_Russia.1251';


ALTER DATABASE mispris OWNER TO postgres;

\connect mispris

SET statement_timeout = 0;
SET lock_timeout = 0;
SET idle_in_transaction_session_timeout = 0;
SET client_encoding = 'UTF8';
SET standard_conforming_strings = on;
SELECT pg_catalog.set_config('search_path', '', false);
SET check_function_bodies = false;
SET xmloption = content;
SET client_min_messages = warning;
SET row_security = off;

SET default_tablespace = '';

SET default_table_access_method = heap;

--
-- Name: product; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.product (
    id integer NOT NULL,
    class_id integer,
    name character varying(250)
);


ALTER TABLE public.product OWNER TO postgres;

--
-- Name: alter_product(integer, integer, character varying); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION public.alter_product(alt_id integer, alt_class_id integer, alt_name character varying) RETURNS public.product
    LANGUAGE sql
    AS $$
    UPDATE product SET
                                   class_id = alt_class_id,
                                   name = alt_name
    WHERE id = alt_id RETURNING *;
$$;


ALTER FUNCTION public.alter_product(alt_id integer, alt_class_id integer, alt_name character varying) OWNER TO postgres;

--
-- Name: product_class; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.product_class (
    id integer NOT NULL,
    parent_id integer,
    name character varying(30),
    short_name character varying(20),
    measurement_id integer NOT NULL
);


ALTER TABLE public.product_class OWNER TO postgres;

--
-- Name: alter_product_class(integer, integer, character varying, character varying, integer); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION public.alter_product_class(alt_id integer, alt_parent_id integer, alt_name character varying, alt_short_name character varying, alt_measurement_id integer) RETURNS public.product_class
    LANGUAGE sql
    AS $$
    UPDATE product_class SET
                                   parent_id = alt_parent_id,
                                   name = alt_name,
                                   short_name = alt_short_name,
                                   measurement_id = alt_measurement_id
    WHERE id = alt_id RETURNING *;
$$;


ALTER FUNCTION public.alter_product_class(alt_id integer, alt_parent_id integer, alt_name character varying, alt_short_name character varying, alt_measurement_id integer) OWNER TO postgres;

--
-- Name: unit_of_measurement; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.unit_of_measurement (
    id integer NOT NULL,
    name character varying(30),
    short_name character varying(20)
);


ALTER TABLE public.unit_of_measurement OWNER TO postgres;

--
-- Name: alter_unit_of_measurement(integer, character varying, character varying); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION public.alter_unit_of_measurement(alt_id integer, alt_name character varying, alt_short_name character varying) RETURNS public.unit_of_measurement
    LANGUAGE sql
    AS $$
    UPDATE unit_of_measurement SET
                                   name = alt_name,
                                   short_name = alt_short_name
    WHERE id = alt_id RETURNING *;
$$;


ALTER FUNCTION public.alter_unit_of_measurement(alt_id integer, alt_name character varying, alt_short_name character varying) OWNER TO postgres;

--
-- Name: delete_product(integer); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION public.delete_product(delete_id integer) RETURNS public.product
    LANGUAGE sql
    AS $$
   DELETE FROM product WHERE id = delete_id RETURNING *;
$$;


ALTER FUNCTION public.delete_product(delete_id integer) OWNER TO postgres;

--
-- Name: delete_product_class(integer); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION public.delete_product_class(delete_id integer) RETURNS public.product_class
    LANGUAGE sql
    AS $$
   DELETE FROM product_class WHERE id = delete_id RETURNING *;
$$;


ALTER FUNCTION public.delete_product_class(delete_id integer) OWNER TO postgres;

--
-- Name: delete_unit_of_measurement(integer); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION public.delete_unit_of_measurement(delete_id integer) RETURNS public.unit_of_measurement
    LANGUAGE sql
    AS $$
   DELETE FROM unit_of_measurement WHERE id = delete_id RETURNING *;
$$;


ALTER FUNCTION public.delete_unit_of_measurement(delete_id integer) OWNER TO postgres;

--
-- Name: insert_product(integer, character varying); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION public.insert_product(class_id integer, name character varying) RETURNS public.product
    LANGUAGE sql
    AS $$
    INSERT INTO product ("class_id", "name")
    VALUES (class_id, name) RETURNING *;
$$;


ALTER FUNCTION public.insert_product(class_id integer, name character varying) OWNER TO postgres;

--
-- Name: insert_product_class(integer, character varying, character varying, integer); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION public.insert_product_class(parent_id integer, name character varying, short_name character varying, measurement_id integer) RETURNS public.product_class
    LANGUAGE sql
    AS $$
    INSERT INTO product_class ("parent_id", "name", "short_name", "measurement_id")
    VALUES (parent_id, name, short_name, measurement_id) RETURNING *;
$$;


ALTER FUNCTION public.insert_product_class(parent_id integer, name character varying, short_name character varying, measurement_id integer) OWNER TO postgres;

--
-- Name: insert_unit_of_measurement(character varying, character varying); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION public.insert_unit_of_measurement(name character varying, short_name character varying) RETURNS public.unit_of_measurement
    LANGUAGE sql
    AS $$
    INSERT INTO unit_of_measurement ("name", "short_name")
    VALUES (name, short_name) RETURNING *;
$$;


ALTER FUNCTION public.insert_unit_of_measurement(name character varying, short_name character varying) OWNER TO postgres;

--
-- Name: product_class_find_parent(integer); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION public.product_class_find_parent(ent_id integer) RETURNS public.product_class
    LANGUAGE sql
    AS $$
   SELECT * FROM product_class WHERE id = ent_id;
$$;


ALTER FUNCTION public.product_class_find_parent(ent_id integer) OWNER TO postgres;

--
-- Name: product_class_set_parent(integer, integer); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION public.product_class_set_parent(ent_id integer, new_parent_id integer) RETURNS public.product_class
    LANGUAGE sql
    AS $$
    UPDATE product_class SET
           parent_id = new_parent_id
    WHERE id = ent_id RETURNING *;
$$;


ALTER FUNCTION public.product_class_set_parent(ent_id integer, new_parent_id integer) OWNER TO postgres;

--
-- Name: product_class_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

ALTER TABLE public.product_class ALTER COLUMN id ADD GENERATED ALWAYS AS IDENTITY (
    SEQUENCE NAME public.product_class_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: product_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

ALTER TABLE public.product ALTER COLUMN id ADD GENERATED ALWAYS AS IDENTITY (
    SEQUENCE NAME public.product_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: unit_of_measurement_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

ALTER TABLE public.unit_of_measurement ALTER COLUMN id ADD GENERATED ALWAYS AS IDENTITY (
    SEQUENCE NAME public.unit_of_measurement_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Data for Name: product; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.product (id, class_id, name) FROM stdin;
2	1	Трррррр
\.


--
-- Data for Name: product_class; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.product_class (id, parent_id, name, short_name, measurement_id) FROM stdin;
1	\N	Сталь гор	Стг	3
3	\N	Труба Сталь круг 	Трск	3
\.


--
-- Data for Name: unit_of_measurement; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.unit_of_measurement (id, name, short_name) FROM stdin;
1	Кило	кг
3	Грамм	г
\.


--
-- Name: product_class_id_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('public.product_class_id_seq', 3, true);


--
-- Name: product_id_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('public.product_id_seq', 2, true);


--
-- Name: unit_of_measurement_id_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('public.unit_of_measurement_id_seq', 3, true);


--
-- Name: product_class product_class_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.product_class
    ADD CONSTRAINT product_class_pkey PRIMARY KEY (id);


--
-- Name: product product_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.product
    ADD CONSTRAINT product_pkey PRIMARY KEY (id);


--
-- Name: unit_of_measurement unit_of_measurement_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.unit_of_measurement
    ADD CONSTRAINT unit_of_measurement_pkey PRIMARY KEY (id);


--
-- Name: product product_class_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.product
    ADD CONSTRAINT product_class_id_fkey FOREIGN KEY (class_id) REFERENCES public.product_class(id) ON DELETE SET NULL;


--
-- Name: product_class product_class_measurement_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.product_class
    ADD CONSTRAINT product_class_measurement_id_fkey FOREIGN KEY (measurement_id) REFERENCES public.unit_of_measurement(id) ON DELETE SET NULL;


--
-- Name: product_class product_class_parent_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.product_class
    ADD CONSTRAINT product_class_parent_id_fkey FOREIGN KEY (parent_id) REFERENCES public.product_class(id) ON DELETE SET NULL;


--
-- PostgreSQL database dump complete
--

